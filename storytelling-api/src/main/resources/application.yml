spring:
  # 环境 dev|test|prod
  profiles:
    active: @profileActive@
  #文件上传设置
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  #资源信息
  messages:
    #国际化资源文件信息
    basename: i18n/messages
  # 链路追踪配置
  sleuth:
    sampler:
      probability: 1.0  # 采样率，开发环境设置为100%
    zipkin:
      base-url: http://localhost:9411  # Zipkin服务地址
      sender:
        type: web  # 发送方式：web(HTTP) 或 kafka
    web:
      client:
        enabled: true  # 启用WebClient追踪
    http:
      legacy:
        enabled: true  # 启用HTTP追踪
    jdbc:
      enabled: true  # 启用JDBC追踪
      includes:
        - CONNECTION  # 追踪 SQL 执行
        - QUERY     # 追踪查询
        - FETCH     # 追踪结果获取
    redis:
      enabled: true  # 启用Redis追踪
    mongodb:
      enabled: true  # 启用MongoDB追踪
  zipkin:
    base-url: http://localhost:9411
    sender:
      type: web
# mybaits-plus配置
mybatis-plus:
  # MyBatis Mapper所对应的XML文件位置
  mapper-locations: classpath*:/mapper/*Mapper.xml
  global-config:
    # 关闭MP3.0自带的banner
    banner: false
    db-config:
      # 主键类型 0:数据库ID自增 1.未定义 2.用户输入 3 id_worker 4.uuid 5.id_worker字符串表示
      id-type: AUTO
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: NOT_NULL
      # 默认数据库表下划线命名
      table-underline: true
sa-token:
  token-name: token
  timeout: 864000
  token-style: random-32
  #jwt密钥 - 使用环境变量配置，提高安全性
  jwt-secret-key: ${JWT_SECRET_KEY:default-secret-key-change-in-production}

# 服务器配置
server:
  port: ${SERVER_PORT:8080}
  # HTTPS配置
  ssl:
    enabled: ${SSL_ENABLED:false}
    port: ${SSL_PORT:8443}
    key-store: ${SSL_KEY_STORE:classpath:keystore.p12}
    key-store-password: ${SSL_KEY_STORE_PASSWORD:changeit}
    key-store-type: ${SSL_KEY_STORE_TYPE:PKCS12}
    key-alias: ${SSL_KEY_ALIAS:tomcat}
  # 连接配置
  tomcat:
    max-connections: 8192
    accept-count: 1000
    max-threads: 800
    min-spare-threads: 100

# 应用安全配置
app:
  security:
    # 是否强制使用HTTPS
    force-https: ${FORCE_HTTPS:false}
    # 是否启用CSRF保护
    csrf-enabled: ${CSRF_ENABLED:true}
    # 是否启用CORS
    cors-enabled: ${CORS_ENABLED:true}
    # 允许的跨域来源
    allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000,https://localhost:3000}
    # 会话超时时间（分钟）
    session-timeout: ${SESSION_TIMEOUT:30}

  # MongoDB Configuration
  data:
    mongodb:
      # MongoDB connection URI (you can use this or individual host/port/db)
      # uri: mongodb://your_username:your_password@your_host:your_port/your_database?authSource=admin
      host: localhost
      port: 27017
      database: storytelling_db # Replace with your database name
      # Optional: Credentials if authentication is enabled
      # username: your_username # Replace with your MongoDB username
      # password: your_password # Replace with your MongoDB password
      # authentication-database: admin # Or the database where the user is defined, if different from 'database'
      # Enable auto-index creation (useful for development, consider disabling in production for performance)
      auto-index-creation: true



