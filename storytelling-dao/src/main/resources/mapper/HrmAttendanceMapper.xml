<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.hrm.HrmAttendanceMapper">

    <!-- HrmAttendance结果映射 -->
    <resultMap id="HrmAttendanceResult" type="com.chennian.storytelling.bean.model.HrmAttendance">
        <result property="id" column="id" />
        <result property="employeeId" column="employee_id" />
        <result property="employeeName" column="employee_name" />
        <result property="employeeNo" column="employee_no" />
        <result property="departmentId" column="department_id" />
        <result property="departmentName" column="department_name" />
        <result property="attendanceDate" column="attendance_date" />
        <result property="checkInTime" column="check_in_time" />
        <result property="checkOutTime" column="check_out_time" />
        <result property="workHours" column="work_hours" />
        <result property="overtimeHours" column="overtime_hours" />
        <result property="lateMinutes" column="late_minutes" />
        <result property="earlyMinutes" column="early_minutes" />
        <result property="status" column="status" />
        <result property="leaveType" column="leave_type" />
        <result property="abnormalReason" column="abnormal_reason" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="selectHrmAttendanceVo">
        SELECT id, employee_id, employee_name, employee_no, department_id, department_name, attendance_date, check_in_time, check_out_time, work_hours, overtime_hours, late_minutes, early_minutes, status, leave_type, abnormal_reason, create_time, update_time
        FROM hrm_attendance
    </sql>

    <!-- selectByEmployeeId -->
    <select id="selectByEmployeeId" resultMap="HrmAttendanceResult">
        <include refid="selectHrmAttendanceVo"/>
        WHERE employee_id = #{employeeId}
        AND del_flag = '0'
        ORDER BY attendance_date DESC
    </select>

    <!-- selectByEmployeeIdAndDate -->
    <select id="selectByEmployeeIdAndDate" resultMap="HrmAttendanceResult">
        <include refid="selectHrmAttendanceVo"/>
        WHERE employee_id = #{employeeId}
        AND attendance_date = #{attendanceDate}
        AND del_flag = '0'
    </select>

    <!-- selectByDepartmentId -->
    <select id="selectByDepartmentId" resultMap="HrmAttendanceResult">
        <include refid="selectHrmAttendanceVo"/>
        WHERE department_id = #{departmentId}
        AND del_flag = '0'
        ORDER BY attendance_date DESC, employee_name
    </select>

    <!-- selectByDateRange -->
    <select id="selectByDateRange" resultMap="HrmAttendanceResult">
        <include refid="selectHrmAttendanceVo"/>
        WHERE attendance_date BETWEEN #{startDate} AND #{endDate}
        AND del_flag = '0'
        ORDER BY attendance_date DESC, employee_name
    </select>

    <!-- selectByEmployeeIdAndDateRange -->
    <select id="selectByEmployeeIdAndDateRange" resultMap="HrmAttendanceResult">
        <include refid="selectHrmAttendanceVo"/>
        WHERE employee_id = #{employeeId}
        AND attendance_date BETWEEN #{startDate} AND #{endDate}
        AND del_flag = '0'
        ORDER BY attendance_date DESC
    </select>

    <!-- selectByStatus -->
    <select id="selectByStatus" resultMap="HrmAttendanceResult">
        <include refid="selectHrmAttendanceVo"/>
        WHERE status = #{status}
        AND del_flag = '0'
        ORDER BY attendance_date DESC, employee_name
    </select>

    <!-- selectAttendanceStatistics -->
    <select id="selectAttendanceStatistics" resultType="java.util.Map">
        SELECT 
            d.department_name,
            COUNT(*) as total_count,
            SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as normal_count,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) as late_count,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) as early_count,
            SUM(CASE WHEN status = 4 THEN 1 ELSE 0 END) as absent_count,
            SUM(CASE WHEN status = 5 THEN 1 ELSE 0 END) as leave_count,
            AVG(work_hours) as avg_work_hours,
            SUM(overtime_hours) as total_overtime_hours
        FROM hrm_attendance a
        LEFT JOIN hrm_department d ON a.department_id = d.id
        WHERE a.attendance_date BETWEEN #{startDate} AND #{endDate}
        AND a.del_flag = '0'
        GROUP BY a.department_id, d.department_name
        ORDER BY d.department_name
    </select>

    <!-- selectMonthlyAttendanceByEmployee -->
    <select id="selectMonthlyAttendanceByEmployee" resultType="java.util.Map">
        SELECT 
            employee_id,
            employee_name,
            COUNT(*) as total_days,
            SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as normal_days,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) as late_days,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) as early_days,
            SUM(CASE WHEN status = 4 THEN 1 ELSE 0 END) as absent_days,
            SUM(CASE WHEN status = 5 THEN 1 ELSE 0 END) as leave_days,
            SUM(work_hours) as total_work_hours,
            SUM(overtime_hours) as total_overtime_hours,
            SUM(late_minutes) as total_late_minutes,
            SUM(early_minutes) as total_early_minutes
        FROM hrm_attendance
        WHERE employee_id = #{employeeId}
        AND YEAR(attendance_date) = #{year}
        AND MONTH(attendance_date) = #{month}
        AND del_flag = '0'
        GROUP BY employee_id, employee_name
    </select>

</mapper>