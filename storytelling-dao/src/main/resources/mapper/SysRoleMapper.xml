<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.SysRoleMapper">

    <!-- SysRole结果映射 -->
    <resultMap id="SysRoleResult" type="com.chennian.storytelling.bean.model.SysRole">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="roleKey" column="role_key" />
        <result property="roleSort" column="role_sort" />
        <result property="dataScope" column="data_scope" />
        <result property="menuCheckStrictly" column="menu_check_strictly" />
        <result property="deptCheckStrictly" column="dept_check_strictly" />
        <result property="status" column="status" />
        <result property="delFlag" column="del_flag" />
        <result property="createBy" column="create_by" />
        <result property="createTime" column="create_time" />
        <result property="updateBy" column="update_by" />
        <result property="updateTime" column="update_time" />
        <result property="remark" column="remark" />
        <result property="roleType" column="role_type" />
        <result property="permissions" column="permissions" />
    </resultMap>

    <sql id="selectSysRoleVo">
        select role_id, role_name, role_key, role_sort, data_scope, menu_check_strictly, dept_check_strictly, 
               status, del_flag, create_by, create_time, update_by, update_time, remark, role_type, permissions
        from sys_role
    </sql>

    <!-- selectRoleList -->
    <select id="selectRoleList" parameterType="SysRole" resultMap="SysRoleResult">
        <include refid="selectSysRoleVo"/>
        <where>
            <if test="roleName != null and roleName != ''">
                AND role_name like concat('%', #{roleName}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="roleKey != null and roleKey != ''">
                AND role_key like concat('%', #{roleKey}, '%')
            </if>
            AND del_flag = '0'
        </where>
        order by role_sort
    </select>

    <!-- selectRolePermissionByUserId -->
    <select id="selectRolePermissionByUserId" resultMap="SysRoleResult">
        select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, 
               r.status, r.del_flag, r.create_by, r.create_time, r.update_by, r.update_time, r.remark, r.role_type, r.permissions
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.role_id
        left join sys_user u on u.user_id = ur.user_id
        where u.user_id = #{userId} and r.del_flag = '0'
    </select>

    <!-- selectRoleAll -->
    <select id="selectRoleAll" resultMap="SysRoleResult">
        <include refid="selectSysRoleVo"/>
        where del_flag = '0' order by role_sort
    </select>

    <!-- selectRoleListByUserId -->
    <select id="selectRoleListByUserId" resultType="Long">
        select r.role_id
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.role_id
        where ur.user_id = #{userId}
    </select>

    <!-- selectRoleById -->
    <select id="selectRoleById" resultMap="SysRoleResult">
        <include refid="selectSysRoleVo"/>
        where role_id = #{roleId}
    </select>

    <!-- selectRolesByUserName -->
    <select id="selectRolesByUserName" resultMap="SysRoleResult">
        select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, 
               r.status, r.del_flag, r.create_by, r.create_time, r.update_by, r.update_time, r.remark, r.role_type, r.permissions
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.role_id
        left join sys_user u on u.user_id = ur.user_id
        where u.user_name = #{userName} and r.del_flag = '0'
    </select>

    <!-- checkRoleNameUnique -->
    <select id="checkRoleNameUnique" resultMap="SysRoleResult">
        <include refid="selectSysRoleVo"/>
        where role_name = #{roleName} and del_flag = '0' limit 1
    </select>

    <!-- checkRoleKeyUnique -->
    <select id="checkRoleKeyUnique" resultMap="SysRoleResult">
        <include refid="selectSysRoleVo"/>
        where role_key = #{roleKey} and del_flag = '0' limit 1
    </select>

    <!-- updateRole -->
    <update id="updateRole" parameterType="SysRole">
        update sys_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">role_name = #{roleName},</if>
            <if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
            <if test="roleSort != null">role_sort = #{roleSort},</if>
            <if test="dataScope != null and dataScope != ''">data_scope = #{dataScope},</if>
            <if test="menuCheckStrictly != null">menu_check_strictly = #{menuCheckStrictly},</if>
            <if test="deptCheckStrictly != null">dept_check_strictly = #{deptCheckStrictly},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="roleType != null">role_type = #{roleType},</if>
            update_time = sysdate()
        </trim>
        where role_id = #{roleId}
    </update>

    <!-- insertRole -->
    <insert id="insertRole" parameterType="SysRole" useGeneratedKeys="true" keyProperty="roleId">
        insert into sys_role(
            <trim prefix="" suffix="" suffixOverrides=",">
                <if test="roleId != null">role_id,</if>
                <if test="roleName != null and roleName != ''">role_name,</if>
                <if test="roleKey != null and roleKey != ''">role_key,</if>
                <if test="roleSort != null">role_sort,</if>
                <if test="dataScope != null and dataScope != ''">data_scope,</if>
                <if test="menuCheckStrictly != null">menu_check_strictly,</if>
                <if test="deptCheckStrictly != null">dept_check_strictly,</if>
                <if test="status != null and status != ''">status,</if>
                <if test="remark != null and remark != ''">remark,</if>
                <if test="createBy != null and createBy != ''">create_by,</if>
                <if test="roleType != null">role_type,</if>
                create_time,
                del_flag
            </trim>
        )values(
            <trim prefix="" suffix="" suffixOverrides=",">
                <if test="roleId != null">#{roleId},</if>
                <if test="roleName != null and roleName != ''">#{roleName},</if>
                <if test="roleKey != null and roleKey != ''">#{roleKey},</if>
                <if test="roleSort != null">#{roleSort},</if>
                <if test="dataScope != null and dataScope != ''">#{dataScope},</if>
                <if test="menuCheckStrictly != null">#{menuCheckStrictly},</if>
                <if test="deptCheckStrictly != null">#{deptCheckStrictly},</if>
                <if test="status != null and status != ''">#{status},</if>
                <if test="remark != null and remark != ''">#{remark},</if>
                <if test="createBy != null and createBy != ''">#{createBy},</if>
                <if test="roleType != null">#{roleType},</if>
                sysdate(),
                '0'
            </trim>
        )
    </insert>

    <!-- deleteRoleById -->
    <delete id="deleteRoleById" parameterType="Long">
        update sys_role set del_flag = '1' where role_id = #{roleId}
    </delete>

    <!-- deleteRoleByIds -->
    <delete id="deleteRoleByIds" parameterType="Long">
        update sys_role set del_flag = '1' where role_id in
        <foreach collection="array" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>



    <!-- countRoleList -->
    <select id="countRoleList" parameterType="SysRole" resultType="int">
        select count(1) from sys_role
        <where>
            <if test="roleName != null and roleName != ''">
                AND role_name like concat('%', #{roleName}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="roleKey != null and roleKey != ''">
                AND role_key like concat('%', #{roleKey}, '%')
            </if>
            AND del_flag = '0'
        </where>
    </select>

    <!-- selectRolesByUserId -->
    <select id="selectRolesByUserId" resultMap="SysRoleResult">
        select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, 
               r.status, r.del_flag, r.create_by, r.create_time, r.update_by, r.update_time, r.remark, r.role_type, r.permissions
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.role_id
        where ur.user_id = #{userId} and r.del_flag = '0'
    </select>

    <!-- selectWorkflowRoles -->
    <select id="selectWorkflowRoles" resultMap="SysRoleResult">
        <include refid="selectSysRoleVo"/>
        where del_flag = '0' and status = '0' and role_type = 'workflow'
        order by role_sort
    </select>

    <!-- selectRolesByUserIdAndDept -->
    <select id="selectRolesByUserIdAndDept" resultMap="SysRoleResult">
        select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly, 
               r.status, r.del_flag, r.create_by, r.create_time, r.update_by, r.update_time, r.remark, r.role_type, r.permissions
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.role_id
        left join sys_user u on u.user_id = ur.user_id
        left join sys_dept d on d.dept_id = u.dept_id
        where ur.user_id = #{userId}
        <if test="deptId != null">
            and (d.dept_id = #{deptId} or d.ancestors like concat('%,', #{deptId}, ',%'))
        </if>
        and r.del_flag = '0'
    </select>

    <!-- selectRolesByType -->
    <select id="selectRolesByType" resultMap="SysRoleResult">
        <include refid="selectSysRoleVo"/>
        where del_flag = '0'
        <if test="roleType != null and roleType != ''">
            and role_type = #{roleType}
        </if>
        order by role_sort
    </select>

</mapper>