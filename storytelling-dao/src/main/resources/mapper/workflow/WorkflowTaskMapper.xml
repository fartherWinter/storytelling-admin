<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.workflow.WorkflowTaskMapper">

    <!-- 结果映射 - 与WfTask实体类字段对应 -->
    <resultMap id="BaseResultMap" type="com.chennian.storytelling.bean.model.workflow.WfTask">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="process_instance_id" property="processInstanceId" jdbcType="VARCHAR"/>
        <result column="process_definition_id" property="processDefinitionId" jdbcType="VARCHAR"/>
        <result column="process_definition_key" property="processDefinitionKey" jdbcType="VARCHAR"/>
        <result column="process_definition_name" property="processDefinitionName" jdbcType="VARCHAR"/>
        <result column="task_definition_key" property="taskDefinitionKey" jdbcType="VARCHAR"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
        <result column="task_description" property="taskDescription" jdbcType="VARCHAR"/>
        <result column="task_type" property="taskType" jdbcType="VARCHAR"/>
        <result column="task_status" property="taskStatus" jdbcType="VARCHAR"/>
        <result column="assignee" property="assignee" jdbcType="VARCHAR"/>
        <result column="assignee_name" property="assigneeName" jdbcType="VARCHAR"/>
        <result column="candidate_users" property="candidateUsers" jdbcType="VARCHAR"/>
        <result column="candidate_groups" property="candidateGroups" jdbcType="VARCHAR"/>
        <result column="owner" property="owner" jdbcType="VARCHAR"/>
        <result column="owner_name" property="ownerName" jdbcType="VARCHAR"/>
        <result column="parent_task_id" property="parentTaskId" jdbcType="VARCHAR"/>
        <result column="priority" property="priority" jdbcType="INTEGER"/>
        <result column="due_date" property="dueDate" jdbcType="TIMESTAMP"/>
        <result column="follow_up_date" property="followUpDate" jdbcType="TIMESTAMP"/>
        <result column="form_key" property="formKey" jdbcType="VARCHAR"/>
        <result column="task_variables" property="taskVariables" jdbcType="LONGVARCHAR"/>
        <result column="execution_id" property="executionId" jdbcType="VARCHAR"/>
        <result column="activity_instance_id" property="activityInstanceId" jdbcType="VARCHAR"/>
        <result column="tenant_id" property="tenantId" jdbcType="VARCHAR"/>
        <result column="business_key" property="businessKey" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="claim_time" property="claimTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="suspend_time" property="suspendTime" jdbcType="TIMESTAMP"/>
        <result column="duration" property="duration" jdbcType="BIGINT"/>
        <result column="delete_reason" property="deleteReason" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, process_instance_id, process_definition_id, process_definition_key, process_definition_name,
        task_definition_key, task_name, task_description, task_type, task_status,
        assignee, assignee_name, candidate_users, candidate_groups, owner, owner_name,
        parent_task_id, priority, due_date, follow_up_date, form_key, task_variables,
        execution_id, activity_instance_id, tenant_id, business_key,
        create_time, start_time, claim_time, end_time, suspend_time, duration,
        delete_reason, create_by, update_by, update_time, remark
    </sql>

    <!-- 分页查询任务列表 -->
    <select id="selectTaskList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM wf_task
        <where>
            <if test="query.processDefinitionKey != null and query.processDefinitionKey != ''">
                AND process_definition_key = #{query.processDefinitionKey}
            </if>
            <if test="query.processInstanceId != null and query.processInstanceId != ''">
                AND process_instance_id = #{query.processInstanceId}
            </if>
            <if test="query.taskName != null and query.taskName != ''">
                AND task_name LIKE CONCAT('%', #{query.taskName}, '%')
            </if>
            <if test="query.assignee != null and query.assignee != ''">
                AND assignee = #{query.assignee}
            </if>
            <if test="query.candidateUser != null and query.candidateUser != ''">
                AND (candidate_users LIKE CONCAT('%', #{query.candidateUser}, '%') OR assignee IS NULL)
            </if>
            <if test="query.candidateGroup != null and query.candidateGroup != ''">
                AND candidate_groups LIKE CONCAT('%', #{query.candidateGroup}, '%')
            </if>
            <if test="query.status != null and query.status != ''">
                AND task_status = #{query.status}
            </if>
            <if test="query.priority != null">
                AND priority = #{query.priority}
            </if>
            <if test="query.businessKey != null and query.businessKey != ''">
                AND business_key = #{query.businessKey}
            </if>
            <if test="query.tenantId != null and query.tenantId != ''">
                AND tenant_id = #{query.tenantId}
            </if>
            <if test="query.createTimeStart != null">
                AND create_time >= #{query.createTimeStart}
            </if>
            <if test="query.createTimeEnd != null">
                AND create_time &lt;= #{query.createTimeEnd}
            </if>
            <if test="query.dueDateStart != null">
                AND due_date >= #{query.dueDateStart}
            </if>
            <if test="query.dueDateEnd != null">
                AND due_date &lt;= #{query.dueDateEnd}
            </if>
        </where>
        <choose>
            <when test="query.orderBy != null and query.orderBy != ''">
                ORDER BY ${query.orderBy}
                <if test="query.orderDirection != null and query.orderDirection != ''">
                    ${query.orderDirection}
                </if>
            </when>
            <otherwise>
                ORDER BY create_time DESC
            </otherwise>
        </choose>
    </select>

    <!-- 查询任务详情 -->
    <select id="selectTaskDetail" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM wf_task
        WHERE id = #{taskId}
    </select>

    <!-- 更新任务优先级 -->
    <update id="updateTaskPriority">
        UPDATE wf_task
        SET priority = #{priority},
            update_time = NOW()
        WHERE id = #{taskId}
    </update>

    <!-- 更新任务处理人 -->
    <update id="updateTaskAssignee">
        UPDATE wf_task
        SET assignee = #{assignee},
            claim_time = CASE WHEN #{assignee} IS NOT NULL THEN NOW() ELSE NULL END,
            update_time = NOW()
        WHERE id = #{taskId}
    </update>

    <!-- 更新任务状态 -->
    <update id="updateTaskStatus">
        UPDATE wf_task
        SET task_status = #{status},
            end_time = CASE WHEN #{status} IN ('COMPLETED', 'REJECTED', 'CANCELLED') THEN NOW() ELSE end_time END,
            update_time = NOW()
        WHERE id = #{taskId}
    </update>

    <!-- 查询任务统计信息 -->
    <select id="selectTaskStatistics" resultType="java.util.Map">
        SELECT
            COUNT(*) as totalCount,
            SUM(CASE WHEN task_status = 'PENDING' THEN 1 ELSE 0 END) as pendingCount,
            SUM(CASE WHEN task_status = 'IN_PROGRESS' THEN 1 ELSE 0 END) as inProgressCount,
            SUM(CASE WHEN task_status = 'COMPLETED' THEN 1 ELSE 0 END) as completedCount,
            SUM(CASE WHEN task_status = 'REJECTED' THEN 1 ELSE 0 END) as rejectedCount,
            SUM(CASE WHEN due_date IS NOT NULL AND due_date &lt; NOW() AND task_status NOT IN ('COMPLETED', 'REJECTED', 'CANCELLED') THEN 1 ELSE 0 END) as overdueCount,
            SUM(CASE WHEN due_date IS NOT NULL AND due_date BETWEEN NOW() AND DATE_ADD(NOW(), INTERVAL 24 HOUR) AND task_status NOT IN ('COMPLETED', 'REJECTED', 'CANCELLED') THEN 1 ELSE 0 END) as dueSoonCount
        FROM wf_task
        <where>
            <if test="assignee != null and assignee != ''">
                AND (assignee = #{assignee} OR candidate_users LIKE CONCAT('%', #{assignee}, '%'))
            </if>
        </where>
    </select>

    <!-- 根据流程实例ID查询任务列表 -->
    <select id="selectTasksByProcessInstanceId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM wf_task
        WHERE process_instance_id = #{processInstanceId}
        ORDER BY create_time ASC
    </select>

    <!-- 根据流程定义键查询任务列表 -->
    <select id="selectTasksByProcessDefinitionKey" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM wf_task
        WHERE process_definition_key = #{processDefinitionKey}
        ORDER BY create_time DESC
    </select>

    <!-- 根据处理人查询待办任务数量 -->
    <select id="countPendingTasksByAssignee" resultType="int">
        SELECT COUNT(*)
        FROM wf_task
        WHERE assignee = #{assignee}
          AND task_status IN ('PENDING', 'IN_PROGRESS')
    </select>

    <!-- 根据候选人查询候选任务数量 -->
    <select id="countCandidateTasksByUser" resultType="int">
        SELECT COUNT(*)
        FROM wf_task
        WHERE candidate_users LIKE CONCAT('%', #{candidateUser}, '%')
          AND assignee IS NULL
          AND task_status = 'PENDING'
    </select>

    <!-- 根据候选组查询候选任务数量 -->
    <select id="countCandidateTasksByGroup" resultType="int">
        SELECT COUNT(*)
        FROM wf_task
        WHERE candidate_groups LIKE CONCAT('%', #{candidateGroup}, '%')
          AND assignee IS NULL
          AND task_status = 'PENDING'
    </select>

    <!-- 查询超时任务列表 -->
    <select id="selectOverdueTasks" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM wf_task
        WHERE due_date IS NOT NULL
          AND due_date &lt; NOW()
          AND task_status NOT IN ('COMPLETED', 'REJECTED', 'CANCELLED')
        ORDER BY due_date ASC
    </select>

    <!-- 查询即将到期任务列表 -->
    <select id="selectTasksDueSoon" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM wf_task
        WHERE due_date IS NOT NULL
          AND due_date BETWEEN NOW() AND DATE_ADD(NOW(), INTERVAL #{hours} HOUR)
          AND task_status NOT IN ('COMPLETED', 'REJECTED', 'CANCELLED')
        ORDER BY due_date ASC
    </select>

    <!-- 批量更新任务状态 -->
    <update id="batchUpdateTaskStatus">
        UPDATE wf_task
        SET task_status = #{status},
            end_time = CASE WHEN #{status} IN ('COMPLETED', 'REJECTED', 'CANCELLED') THEN NOW() ELSE end_time END,
            update_time = NOW()
        WHERE id IN
        <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </update>

    <!-- 批量更新任务处理人 -->
    <update id="batchUpdateTaskAssignee">
        UPDATE wf_task
        SET assignee = #{assignee},
            claim_time = CASE WHEN #{assignee} IS NOT NULL THEN NOW() ELSE NULL END,
            update_time = NOW()
        WHERE id IN
        <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </update>

</mapper>