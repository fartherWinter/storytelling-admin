<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.project.ProjectTaskMapper">

    <!-- 项目任务结果映射 -->
    <resultMap id="ProjectTaskResult" type="com.chennian.storytelling.bean.model.project.ProjectTask">
        <id property="id" column="id" />
        <result property="projectId" column="project_id" />
        <result property="taskNo" column="task_no" />
        <result property="taskName" column="task_name" />
        <result property="description" column="description" />
        <result property="taskType" column="task_type" />
        <result property="status" column="status" />
        <result property="priority" column="priority" />
        <result property="parentId" column="parent_id" />
        <result property="assigneeId" column="assignee_id" />
        <result property="assigneeName" column="assignee_name" />
        <result property="plannedStartTime" column="planned_start_time" />
        <result property="plannedEndTime" column="planned_end_time" />
        <result property="actualStartTime" column="actual_start_time" />
        <result property="actualEndTime" column="actual_end_time" />
        <result property="progress" column="progress" />
        <result property="estimatedHours" column="estimated_hours" />
        <result property="actualHours" column="actual_hours" />
        <result property="cost" column="cost" />
        <result property="completionNotes" column="completion_notes" />
        <result property="dependencies" column="dependencies" />
        <result property="tags" column="tags" />
        <result property="remarks" column="remarks" />
        <result property="createBy" column="create_by" />
        <result property="createTime" column="create_time" />
        <result property="updateBy" column="update_by" />
        <result property="updateTime" column="update_time" />
        <result property="delFlag" column="del_flag" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="selectProjectTaskVo">
        SELECT id, project_id, task_no, task_name, description, task_type, status, priority, 
               parent_id, assignee_id, assignee_name, planned_start_time, planned_end_time, 
               actual_start_time, actual_end_time, progress, estimated_hours, actual_hours, 
               cost, completion_notes, dependencies, tags, remarks, create_by, create_time, 
               update_by, update_time, del_flag
        FROM project_task
    </sql>

    <!-- 查询项目任务列表 -->
    <select id="selectTaskList" parameterType="com.chennian.storytelling.bean.model.project.ProjectTask" resultMap="ProjectTaskResult">
        <include refid="selectProjectTaskVo"/>
        <where>
            del_flag = '0'
            <if test="task.projectId != null">
                AND project_id = #{task.projectId}
            </if>
            <if test="task.taskName != null and task.taskName != ''">
                AND task_name LIKE CONCAT('%', #{task.taskName}, '%')
            </if>
            <if test="task.status != null">
                AND status = #{task.status}
            </if>
            <if test="task.taskType != null">
                AND task_type = #{task.taskType}
            </if>
            <if test="task.priority != null">
                AND priority = #{task.priority}
            </if>
            <if test="task.assigneeId != null">
                AND assignee_id = #{task.assigneeId}
            </if>
            <if test="task.assigneeName != null and task.assigneeName != ''">
                AND assignee_name LIKE CONCAT('%', #{task.assigneeName}, '%')
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <!-- 获取任务甘特图数据 -->
    <select id="selectTaskGanttData" parameterType="Long" resultType="java.util.Map">
        SELECT 
            id as taskId,
            task_name as taskName,
            planned_start_time as startDate,
            planned_end_time as endDate,
            actual_start_time as actualStartDate,
            actual_end_time as actualEndDate,
            progress,
            status,
            priority,
            assignee_name as assigneeName,
            parent_id as parentId
        FROM project_task 
        WHERE project_id = #{projectId} AND del_flag = '0'
        ORDER BY planned_start_time ASC
    </select>

    <!-- 获取项目团队绩效分析 -->
    <select id="selectTeamPerformanceAnalysis" parameterType="Long" resultType="java.util.Map">
        SELECT 
            assignee_id as memberId,
            assignee_name as memberName,
            COUNT(*) as totalTasks,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) as completedTasks,
            AVG(progress) as avgProgress,
            SUM(actual_hours) as totalHours,
            SUM(estimated_hours) as estimatedHours,
            AVG(CASE WHEN actual_end_time IS NOT NULL AND planned_end_time IS NOT NULL 
                     THEN DATEDIFF(actual_end_time, planned_end_time) ELSE 0 END) as avgDelay
        FROM project_task 
        WHERE project_id = #{projectId} AND del_flag = '0' AND assignee_id IS NOT NULL
        GROUP BY assignee_id, assignee_name
    </select>

    <!-- 获取任务完成率趋势 -->
    <select id="selectTaskCompletionTrend" resultType="java.util.Map">
        SELECT 
            <choose>
                <when test="period == 'day'">
                    DATE(actual_end_time) as date,
                </when>
                <when test="period == 'week'">
                    DATE_FORMAT(actual_end_time, '%Y-%u') as date,
                </when>
                <when test="period == 'month'">
                    DATE_FORMAT(actual_end_time, '%Y-%m') as date,
                </when>
                <otherwise>
                    DATE(actual_end_time) as date,
                </otherwise>
            </choose>
            COUNT(*) as completedCount,
            AVG(progress) as avgProgress
        FROM project_task 
        WHERE project_id = #{projectId} 
              AND del_flag = '0' 
              AND status = 3
              AND actual_end_time BETWEEN #{startDate} AND #{endDate}
        GROUP BY 
            <choose>
                <when test="period == 'day'">
                    DATE(actual_end_time)
                </when>
                <when test="period == 'week'">
                    DATE_FORMAT(actual_end_time, '%Y-%u')
                </when>
                <when test="period == 'month'">
                    DATE_FORMAT(actual_end_time, '%Y-%m')
                </when>
                <otherwise>
                    DATE(actual_end_time)
                </otherwise>
            </choose>
        ORDER BY date ASC
    </select>

    <!-- 获取任务工时统计 -->
    <select id="selectWorkHourStatistics" resultType="java.util.Map">
        SELECT 
            id as taskId,
            task_name as taskName,
            assignee_name as assigneeName,
            estimated_hours as estimatedHours,
            actual_hours as actualHours,
            (actual_hours - estimated_hours) as hoursDifference,
            CASE 
                WHEN estimated_hours &gt;0 THEN (actual_hours / estimated_hours * 100)
                ELSE 0 
            END as efficiency
        FROM project_task 
        WHERE project_id = #{projectId} 
              AND del_flag = '0'
              AND actual_start_time BETWEEN #{startDate} AND #{endDate}
        ORDER BY actual_hours DESC
    </select>

    <!-- 获取关键路径任务 -->
    <select id="selectCriticalPathTasks" parameterType="Long" resultType="java.util.Map">
        WITH RECURSIVE task_path AS (
            -- 起始任务（没有前置依赖的任务）
            SELECT 
                id as taskId,
                task_name as taskName,
                planned_start_time as startTime,
                planned_end_time as endTime,
                DATEDIFF(planned_end_time, planned_start_time) as duration,
                0 as level,
                CAST(id AS CHAR(1000)) as path
            FROM project_task 
            WHERE project_id = #{projectId} 
                  AND del_flag = '0' 
                  AND parent_id IS NULL
            
            UNION ALL
            
            -- 递归查找依赖任务
            SELECT 
                t.id as taskId,
                t.task_name as taskName,
                t.planned_start_time as startTime,
                t.planned_end_time as endTime,
                DATEDIFF(t.planned_end_time, t.planned_start_time) as duration,
                tp.level + 1,
                CONCAT(tp.path, '->', t.id) as path
            FROM project_task t
            INNER JOIN task_path tp ON t.parent_id = tp.taskId
            WHERE t.del_flag = '0'
        )
        SELECT 
            taskId,
            taskName,
            startTime,
            endTime,
            duration,
            level,
            path
        FROM task_path
        ORDER BY level, startTime
    </select>

    <!-- 获取任务层级结构 -->
    <select id="selectTaskHierarchy" parameterType="Long" resultType="java.util.Map">
        WITH RECURSIVE task_hierarchy AS (
            -- 根任务
            SELECT 
                id as taskId,
                task_name as taskName,
                parent_id as parentId,
                0 as level,
                CAST(task_name AS CHAR(1000)) as hierarchy_path
            FROM project_task 
            WHERE project_id = #{projectId} 
                  AND del_flag = '0' 
                  AND parent_id IS NULL
            
            UNION ALL
            
            -- 子任务
            SELECT 
                t.id as taskId,
                t.task_name as taskName,
                t.parent_id as parentId,
                th.level + 1,
                CONCAT(th.hierarchy_path, ' -> ', t.task_name) as hierarchy_path
            FROM project_task t
            INNER JOIN task_hierarchy th ON t.parent_id = th.taskId
            WHERE t.del_flag = '0'
        )
        SELECT 
            taskId,
            taskName,
            parentId,
            level,
            hierarchy_path as hierarchyPath
        FROM task_hierarchy
        ORDER BY level, taskName
    </select>

    <!-- 获取任务资源分配情况 -->
    <select id="selectTaskResourceAllocation" parameterType="Long" resultType="java.util.Map">
        SELECT 
            assignee_id as assigneeId,
            assignee_name as assigneeName,
            COUNT(*) as taskCount,
            SUM(estimated_hours) as totalEstimatedHours,
            SUM(actual_hours) as totalActualHours,
            AVG(progress) as avgProgress,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) as completedTasks,
            SUM(CASE WHEN status IN (0, 1, 2) AND planned_end_time &lt;NOW() THEN 1 ELSE 0 END) as overdueTasks
        FROM project_task 
        WHERE project_id = #{projectId} 
              AND del_flag = '0' 
              AND assignee_id IS NOT NULL
        GROUP BY assignee_id, assignee_name
        ORDER BY taskCount DESC
    </select>

    <!-- 获取项目任务进度统计 -->
    <select id="selectTaskProgressByProject" parameterType="Long" resultType="java.util.Map">
        SELECT 
            COUNT(*) as totalTasks,
            SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as notStartedTasks,
            SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as inProgressTasks,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) as pausedTasks,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) as completedTasks,
            SUM(CASE WHEN status = 4 THEN 1 ELSE 0 END) as cancelledTasks,
            AVG(progress) as avgProgress,
            SUM(estimated_hours) as totalEstimatedHours,
            SUM(actual_hours) as totalActualHours,
            SUM(CASE WHEN planned_end_time &lt;NOW() AND status IN (0, 1, 2) THEN 1 ELSE 0 END) as overdueTasks
        FROM project_task 
        WHERE project_id = #{projectId} AND del_flag = '0'
    </select>

</mapper>