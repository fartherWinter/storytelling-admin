<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.manufacturing.WorkOrderMapper">

    <!-- WorkOrder结果映射 -->
    <resultMap id="WorkOrderResult" type="com.chennian.storytelling.bean.model.WorkOrder">
        <id property="workOrderId" column="work_order_id" />
        <result property="workOrderCode" column="work_order_code" />
        <result property="workOrderName" column="work_order_name" />
        <result property="productionOrderId" column="production_order_id" />
        <result property="productionOrderCode" column="production_order_code" />
        <result property="productId" column="product_id" />
        <result property="productName" column="product_name" />
        <result property="productSpec" column="product_spec" />
        <result property="processName" column="process_name" />
        <result property="processCode" column="process_code" />
        <result property="workOrderQuantity" column="work_order_quantity" />
        <result property="completedQuantity" column="completed_quantity" />
        <result property="qualifiedQuantity" column="qualified_quantity" />
        <result property="unqualifiedQuantity" column="unqualified_quantity" />
        <result property="planStartTime" column="plan_start_time" />
        <result property="planEndTime" column="plan_end_time" />
        <result property="actualStartTime" column="actual_start_time" />
        <result property="actualEndTime" column="actual_end_time" />
        <result property="workOrderStatus" column="work_order_status" />
        <result property="priority" column="priority" />
        <result property="productionLineId" column="production_line_id" />
        <result property="productionLineName" column="production_line_name" />
        <result property="equipmentId" column="equipment_id" />
        <result property="equipmentName" column="equipment_name" />
        <result property="operatorId" column="operator_id" />
        <result property="operatorName" column="operator_name" />
        <result property="planWorkHours" column="plan_work_hours" />
        <result property="actualWorkHours" column="actual_work_hours" />
        <result property="standardWorkHours" column="standard_work_hours" />
        <result property="workHourEfficiency" column="work_hour_efficiency" />
        <result property="planCost" column="plan_cost" />
        <result property="actualCost" column="actual_cost" />
        <result property="progress" column="progress" />
        <result property="qualityRequirement" column="quality_requirement" />
        <result property="processRequirement" column="process_requirement" />
        <result property="technicalRequirement" column="technical_requirement" />
        <result property="safetyRequirement" column="safety_requirement" />
        <result property="assignTime" column="assign_time" />
        <result property="assignerId" column="assigner_id" />
        <result property="assignerName" column="assigner_name" />
        <result property="description" column="description" />
        <result property="remark" column="remark" />
        <result property="createBy" column="create_by" />
        <result property="createTime" column="create_time" />
        <result property="updateBy" column="update_by" />
        <result property="updateTime" column="update_time" />
        <result property="delFlag" column="del_flag" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="selectWorkOrderVo">
        SELECT work_order_id, work_order_code, work_order_name, production_order_id, production_order_code, product_id, product_name, product_spec, process_name, process_code, work_order_quantity, completed_quantity, qualified_quantity, unqualified_quantity, plan_start_time, plan_end_time, actual_start_time, actual_end_time, work_order_status, priority, production_line_id, production_line_name, equipment_id, equipment_name, operator_id, operator_name, plan_work_hours, actual_work_hours, standard_work_hours, work_hour_efficiency, plan_cost, actual_cost, progress, quality_requirement, process_requirement, technical_requirement, safety_requirement, assign_time, assigner_id, assigner_name, description, remark, create_by, create_time, update_by, update_time, del_flag
        FROM work_order
    </sql>

    <!-- updateOrderStatus -->
    <update id="updateOrderStatus">
        UPDATE work_order 
        SET work_order_status = #{status}, update_time = NOW()
        WHERE work_order_id = #{workOrderId}
    </update>

    <!-- assignOperator -->
    <update id="assignOperator">
        UPDATE work_order 
        SET operator_id = #{operatorId}, 
            work_order_status = 'ASSIGNED',
            update_time = NOW()
        WHERE work_order_id = #{workOrderId}
    </update>

    <!-- startWork -->
    <update id="startWork">
        UPDATE work_order 
        SET work_order_status = 'IN_PROGRESS',
            actual_start_time = NOW(),
            update_time = NOW()
        WHERE work_order_id = #{workOrderId}
    </update>

    <!-- completeWork -->
    <update id="completeWork">
        UPDATE work_order 
        SET work_order_status = 'COMPLETED',
            actual_end_time = NOW(),
            completed_quantity = #{completedQuantity},
            qualified_quantity = #{qualifiedQuantity},
            unqualified_quantity = #{unqualifiedQuantity},
            update_time = NOW()
        WHERE work_order_id = #{workOrderId}
    </update>



    <!-- selectByProductionOrderId -->
    <select id="selectByProductionOrderId" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE production_order_id = #{productionOrderId} AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- selectByStatus -->
    <select id="selectByStatus" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE work_order_status = #{status} AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- selectByLineId -->
    <select id="selectByLineId" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE production_line_id = #{lineId} AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- selectByProductId -->
    <select id="selectByProductId" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE product_id = #{productId} AND del_flag = '0'
        ORDER BY create_time DESC
    </select>







    <!-- selectByOperatorId -->
    <select id="selectByOperatorId" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE operator_id = #{operatorId} AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- selectOrderStatistics -->
    <select id="selectOrderStatistics" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_count,
            SUM(CASE WHEN work_order_status = 'COMPLETED' THEN 1 ELSE 0 END) as completed_count,
            SUM(CASE WHEN work_order_status = 'IN_PROGRESS' THEN 1 ELSE 0 END) as in_progress_count,
            SUM(CASE WHEN work_order_status = 'PENDING' THEN 1 ELSE 0 END) as pending_count,
            SUM(work_order_quantity) as total_quantity,
            SUM(completed_quantity) as total_completed_quantity
        FROM work_order
        WHERE del_flag = '0'
    </select>





    <!-- generateFromProductionOrder -->
    <insert id="generateFromProductionOrder">
        INSERT INTO work_order (
            work_order_code, production_order_id, product_id, production_line_id,
            work_order_quantity, plan_start_time, plan_end_time, work_order_status,
            create_time, update_time, del_flag
        )
        SELECT 
            CONCAT('WO', DATE_FORMAT(NOW(), '%Y%m%d'), LPAD(FLOOR(RAND() * 10000), 4, '0')),
            #{productionOrderId},
            product_id,
            production_line_id,
            order_quantity,
            plan_start_time,
            plan_end_time,
            'PENDING',
            NOW(),
            NOW(),
            '0'
        FROM production_order
        WHERE production_order_id = #{productionOrderId} AND del_flag = '0'
    </insert>

    <!-- assignWorkOrder -->
    <update id="assignWorkOrder">
        UPDATE work_order 
        SET operator_id = #{operatorId}, 
            operator_name = #{operatorName},
            work_order_status = 'ASSIGNED',
            assign_time = NOW(),
            assigner_id = #{assignerId},
            assigner_name = #{assignerName},
            update_time = NOW()
        WHERE work_order_id = #{workOrderId}
    </update>

    <!-- reportWorkOrder -->
    <update id="reportWorkOrder">
        UPDATE work_order 
        SET completed_quantity = #{completedQuantity},
            qualified_quantity = #{qualifiedQuantity},
            unqualified_quantity = #{unqualifiedQuantity},
            progress = CASE 
                WHEN work_order_quantity &gt;0 THEN
                    ROUND(#{completedQuantity} * 100.0 / work_order_quantity, 2)
                ELSE 0 
            END,
            update_time = NOW()
        WHERE work_order_id = #{workOrderId}
    </update>

    <!-- generateWorkOrderFromProductionOrder -->
    <insert id="generateWorkOrderFromProductionOrder">
        INSERT INTO work_order (
            work_order_code, production_order_id, product_id, production_line_id,
            work_order_quantity, plan_start_time, plan_end_time, work_order_status,
            process_id, process_name, standard_work_hours, standard_cost,
            create_time, update_time, del_flag
        )
        SELECT 
            CONCAT('WO', DATE_FORMAT(NOW(), '%Y%m%d'), LPAD(FLOOR(RAND() * 10000), 4, '0')),
            po.production_order_id,
            po.product_id,
            #{productionLineId},
            po.order_quantity,
            po.plan_start_time,
            po.plan_end_time,
            'PENDING',
            #{processId},
            #{processName},
            #{standardWorkHours},
            #{standardCost},
            NOW(),
            NOW(),
            '0'
        FROM production_order po
        WHERE po.production_order_id = #{productionOrderId} AND po.del_flag = '0'
    </insert>

    <!-- selectQualityStatistics -->
    <select id="selectQualityStatistics" resultType="java.util.Map">
        SELECT 
            DATE(actual_end_time) as statistics_date,
            COUNT(*) as total_orders,
            SUM(completed_quantity) as total_completed,
            SUM(qualified_quantity) as total_qualified,
            SUM(unqualified_quantity) as total_unqualified,
            CASE 
                WHEN SUM(completed_quantity) &gt;0 THEN
                    ROUND(SUM(qualified_quantity) * 100.0 / SUM(completed_quantity), 2)
                ELSE 0 
            END as quality_rate
        FROM work_order
        WHERE del_flag = '0' AND work_order_status = 'COMPLETED'
        <if test="startDate != null">
            AND actual_end_time &gt;=#{startDate}
        </if>
        <if test="endDate != null">
            AND actual_end_time &lt;=#{endDate}
        </if>
        <if test="productId != null">
            AND product_id = #{productId}
        </if>
        GROUP BY DATE(actual_end_time)
        ORDER BY statistics_date DESC
    </select>

    <!-- selectWasteStatistics -->
    <select id="selectWasteStatistics" resultType="java.util.Map">
        SELECT 
            product_id,
            COUNT(*) as total_orders,
            SUM(work_order_quantity) as planned_quantity,
            SUM(completed_quantity) as actual_quantity,
            SUM(unqualified_quantity) as waste_quantity,
            CASE 
                WHEN SUM(completed_quantity) &gt;0 THEN
                    ROUND(SUM(unqualified_quantity) * 100.0 / SUM(completed_quantity), 2)
                ELSE 0 
            END as waste_rate
        FROM work_order
        WHERE del_flag = '0' AND work_order_status = 'COMPLETED'
        <if test="startDate != null">
            AND actual_end_time &gt;=#{startDate}
        </if>
        <if test="endDate != null">
            AND actual_end_time &lt;=#{endDate}
        </if>
        <if test="productId != null">
            AND product_id = #{productId}
        </if>
        GROUP BY product_id
        ORDER BY waste_rate DESC
    </select>

    <!-- selectEfficiencyStatistics -->
    <select id="selectEfficiencyStatistics" resultType="java.util.Map">
        SELECT 
            production_line_id,
            COUNT(*) as total_orders,
            AVG(work_hour_efficiency) as avg_efficiency,
            SUM(plan_work_hours) as total_plan_hours,
            SUM(actual_work_hours) as total_actual_hours,
            CASE 
                WHEN SUM(actual_work_hours) &gt;0 THEN
                    ROUND(SUM(plan_work_hours) * 100.0 / SUM(actual_work_hours), 2)
                ELSE 0 
            END as time_efficiency
        FROM work_order
        WHERE del_flag = '0' AND work_order_status = 'COMPLETED'
        <if test="startDate != null">
            AND actual_end_time &gt;=#{startDate}
        </if>
        <if test="endDate != null">
            AND actual_end_time &lt;=#{endDate}
        </if>
        <if test="productionLineId != null">
            AND production_line_id = #{productionLineId}
        </if>
        GROUP BY production_line_id
        ORDER BY avg_efficiency DESC
    </select>

    <!-- selectByDateRange -->
    <select id="selectByDateRange" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE del_flag = '0'
        <if test="startDate != null">
            AND create_time &gt;=#{startDate}
        </if>
        <if test="endDate != null">
            AND create_time &lt;=#{endDate}
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- startWorkOrder -->
    <update id="startWorkOrder">
        UPDATE work_order 
        SET work_order_status = 'IN_PROGRESS',
            actual_start_time = NOW(),
            update_time = NOW()
        WHERE work_order_id = #{workOrderId} AND work_order_status = 'ASSIGNED'
    </update>

    <!-- completeWorkOrder -->
    <update id="completeWorkOrder">
        UPDATE work_order 
        SET work_order_status = 'COMPLETED',
            actual_end_time = NOW(),
            completed_quantity = #{completedQuantity},
            qualified_quantity = #{qualifiedQuantity},
            unqualified_quantity = #{unqualifiedQuantity},
            progress = 100,
            actual_work_hours = #{actualWorkHours},
            actual_cost = #{actualCost},
            update_time = NOW()
        WHERE work_order_id = #{workOrderId} AND work_order_status = 'IN_PROGRESS'
    </update>

    <!-- selectByPriority -->
    <select id="selectByPriority" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE priority = #{priority} AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- selectOverdueOrders -->
    <select id="selectOverdueOrders" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE del_flag = '0' 
        AND work_order_status NOT IN ('COMPLETED', 'CANCELLED')
        AND plan_end_time &lt;NOW()
        ORDER BY plan_end_time ASC
    </select>

    <!-- selectByEquipmentId -->
    <select id="selectByEquipmentId" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE equipment_id = #{equipmentId} AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- selectPendingOrders -->
    <select id="selectPendingOrders" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE work_order_status = 'PENDING' AND del_flag = '0'
        ORDER BY priority DESC, create_time ASC
    </select>

    <!-- selectInProgressOrders -->
    <select id="selectInProgressOrders" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE work_order_status = 'IN_PROGRESS' AND del_flag = '0'
        ORDER BY actual_start_time ASC
    </select>

    <!-- selectCompletedOrders -->
    <select id="selectCompletedOrders" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE work_order_status = 'COMPLETED' AND del_flag = '0'
        <if test="startDate != null">
            AND actual_end_time &gt;=#{startDate}
        </if>
        <if test="endDate != null">
            AND actual_end_time &lt;=#{endDate}
        </if>
        ORDER BY actual_end_time DESC
    </select>

    <!-- selectByProcessCode -->
    <select id="selectByProcessCode" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE process_code = #{processCode} AND del_flag = '0'
        ORDER BY create_time DESC
    </select>

    <!-- selectWorkOrdersByCondition -->
    <select id="selectWorkOrdersByCondition" resultMap="WorkOrderResult">
        <include refid="selectWorkOrderVo"/>
        WHERE del_flag = '0'
        <if test="workOrderCode != null and workOrderCode != ''">
            AND work_order_code LIKE CONCAT('%', #{workOrderCode}, '%')
        </if>
        <if test="productionOrderId != null">
            AND production_order_id = #{productionOrderId}
        </if>
        <if test="productId != null">
            AND product_id = #{productId}
        </if>
        <if test="workOrderStatus != null and workOrderStatus != ''">
            AND work_order_status = #{workOrderStatus}
        </if>
        <if test="productionLineId != null">
            AND production_line_id = #{productionLineId}
        </if>
        <if test="operatorId != null">
            AND operator_id = #{operatorId}
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- batchUpdateStatus -->
    <update id="batchUpdateStatus">
        UPDATE work_order 
        SET work_order_status = #{status}, update_time = NOW()
        WHERE work_order_id IN
        <foreach collection="workOrderIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>