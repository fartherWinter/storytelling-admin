<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.hrm.HrmSalaryMapper">

    <resultMap type="com.chennian.storytelling.bean.model.hrm.HrmSalary" id="BaseResultMap">
        <id property="id" column="id" />
        <result property="employeeId" column="employee_id" />
        <result property="employeeName" column="employee_name" />
        <result property="employeeNo" column="employee_no" />
        <result property="departmentId" column="department_id" />
        <result property="departmentName" column="department_name" />
        <result property="salaryMonth" column="salary_month" />
        <result property="baseSalary" column="base_salary" />
        <result property="positionSalary" column="position_salary" />
        <result property="performanceSalary" column="performance_salary" />
        <result property="overtimeSalary" column="overtime_salary" />
        <result property="allowance" column="allowance" />
        <result property="bonus" column="bonus" />
        <result property="grossSalary" column="gross_salary" />
        <result property="socialInsurance" column="social_insurance" />
        <result property="housingFund" column="housing_fund" />
        <result property="incomeTax" column="income_tax" />
        <result property="otherDeduction" column="other_deduction" />
        <result property="totalDeduction" column="total_deduction" />
        <result property="netSalary" column="net_salary" />
        <result property="workDays" column="work_days" />
        <result property="attendanceDays" column="attendance_days" />
        <result property="overtimeHours" column="overtime_hours" />
        <result property="payStatus" column="pay_status" />
        <result property="payTime" column="pay_time" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="createBy" column="create_by" />
        <result property="updateBy" column="update_by" />
        <result property="remark" column="remark" />
    </resultMap>

    <sql id="Base_Column_List">
        id, employee_id, employee_name, employee_no, department_id, department_name,
        salary_month, base_salary, position_salary, performance_salary, overtime_salary,
        allowance, bonus, gross_salary, social_insurance, housing_fund, income_tax,
        other_deduction, total_deduction, net_salary, work_days, attendance_days,
        overtime_hours, pay_status, pay_time, create_time, update_time, create_by, update_by, remark
    </sql>

    <!-- 根据员工ID查询薪资记录 -->
    <select id="selectByEmployeeId" parameterType="long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_salary
        WHERE employee_id = #{employeeId}
        ORDER BY salary_month DESC
    </select>

    <!-- 根据员工ID和薪资年月查询薪资记录 -->
    <select id="selectByEmployeeIdAndMonth" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_salary
        WHERE employee_id = #{employeeId}
        AND salary_month = #{salaryMonth}
    </select>

    <!-- 根据部门ID查询薪资记录 -->
    <select id="selectByDepartmentId" parameterType="long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_salary
        WHERE department_id = #{departmentId}
        ORDER BY salary_month DESC, employee_name
    </select>

    <!-- 根据薪资年月查询薪资记录 -->
    <select id="selectBySalaryMonth" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_salary
        WHERE salary_month = #{salaryMonth}
        ORDER BY department_name, employee_name
    </select>

    <!-- 根据发放状态查询薪资记录 -->
    <select id="selectByPayStatus" parameterType="integer" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_salary
        WHERE pay_status = #{payStatus}
        ORDER BY salary_month DESC, department_name, employee_name
    </select>

    <!-- 查询薪资统计信息 -->
    <select id="selectSalaryStatistics" resultType="java.util.Map">
        SELECT 
            department_name,
            COUNT(*) as total_records,
            COUNT(CASE WHEN pay_status = 2 THEN 1 END) as paid_records,
            COUNT(CASE WHEN pay_status = 1 THEN 1 END) as unpaid_records,
            ROUND(SUM(gross_salary), 2) as total_gross_salary,
            ROUND(SUM(net_salary), 2) as total_net_salary,
            ROUND(SUM(total_deduction), 2) as total_deduction_amount,
            ROUND(AVG(gross_salary), 2) as avg_gross_salary,
            ROUND(AVG(net_salary), 2) as avg_net_salary,
            MAX(gross_salary) as max_gross_salary,
            MIN(gross_salary) as min_gross_salary,
            ROUND(SUM(overtime_salary), 2) as total_overtime_salary,
            ROUND(SUM(bonus), 2) as total_bonus
        FROM hrm_salary
        <where>
            <if test="salaryMonth != null and salaryMonth != ''">
                AND salary_month = #{salaryMonth}
            </if>
        </where>
        GROUP BY department_name
        ORDER BY department_name
    </select>

    <!-- 查询员工年度薪资统计 -->
    <select id="selectYearlySalaryByEmployee" resultType="java.util.Map">
        SELECT 
            salary_month,
            employee_name,
            department_name,
            gross_salary,
            net_salary,
            total_deduction,
            overtime_salary,
            bonus,
            work_days,
            attendance_days,
            overtime_hours,
            pay_status
        FROM hrm_salary
        WHERE employee_id = #{employeeId}
        AND salary_month LIKE CONCAT(#{year}, '%')
        ORDER BY salary_month
    </select>

    <!-- 查询部门薪资统计 -->
    <select id="selectDepartmentSalaryStatistics" resultType="java.util.Map">
        SELECT 
            department_name,
            COUNT(*) as employee_count,
            ROUND(SUM(gross_salary), 2) as total_gross_salary,
            ROUND(SUM(net_salary), 2) as total_net_salary,
            ROUND(SUM(total_deduction), 2) as total_deduction_amount,
            ROUND(AVG(gross_salary), 2) as avg_gross_salary,
            ROUND(AVG(net_salary), 2) as avg_net_salary,
            MAX(gross_salary) as max_gross_salary,
            MIN(gross_salary) as min_gross_salary,
            ROUND(SUM(overtime_salary), 2) as total_overtime_salary,
            ROUND(SUM(bonus), 2) as total_bonus,
            COUNT(CASE WHEN pay_status = 2 THEN 1 END) as paid_count,
            COUNT(CASE WHEN pay_status = 1 THEN 1 END) as unpaid_count
        FROM hrm_salary
        WHERE department_id = #{departmentId}
        <if test="salaryMonth != null and salaryMonth != ''">
            AND salary_month = #{salaryMonth}
        </if>
        GROUP BY department_name
    </select>

</mapper>