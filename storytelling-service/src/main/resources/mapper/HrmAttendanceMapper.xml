<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.hrm.HrmAttendanceMapper">

    <resultMap type="com.chennian.storytelling.bean.model.hrm.HrmAttendance" id="BaseResultMap">
        <id property="id" column="id" />
        <result property="employeeId" column="employee_id" />
        <result property="employeeName" column="employee_name" />
        <result property="employeeNo" column="employee_no" />
        <result property="departmentId" column="department_id" />
        <result property="departmentName" column="department_name" />
        <result property="attendanceDate" column="attendance_date" />
        <result property="checkInTime" column="check_in_time" />
        <result property="checkOutTime" column="check_out_time" />
        <result property="workHours" column="work_hours" />
        <result property="overtimeHours" column="overtime_hours" />
        <result property="lateMinutes" column="late_minutes" />
        <result property="earlyMinutes" column="early_minutes" />
        <result property="status" column="status" />
        <result property="leaveType" column="leave_type" />
        <result property="abnormalReason" column="abnormal_reason" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="createBy" column="create_by" />
        <result property="updateBy" column="update_by" />
        <result property="remark" column="remark" />
    </resultMap>

    <sql id="Base_Column_List">
        id, employee_id, employee_name, employee_no, department_id, department_name,
        attendance_date, check_in_time, check_out_time, work_hours, overtime_hours,
        late_minutes, early_minutes, status, leave_type, abnormal_reason,
        create_time, update_time, create_by, update_by, remark
    </sql>

    <!-- 根据员工ID查询考勤记录 -->
    <select id="selectByEmployeeId" parameterType="long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_attendance
        WHERE employee_id = #{employeeId}
        ORDER BY attendance_date DESC
    </select>

    <!-- 根据员工ID和日期查询考勤记录 -->
    <select id="selectByEmployeeIdAndDate" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_attendance
        WHERE employee_id = #{employeeId}
        AND attendance_date = #{attendanceDate}
    </select>

    <!-- 根据部门ID查询考勤记录 -->
    <select id="selectByDepartmentId" parameterType="long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_attendance
        WHERE department_id = #{departmentId}
        ORDER BY attendance_date DESC, employee_name
    </select>

    <!-- 根据日期范围查询考勤记录 -->
    <select id="selectByDateRange" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_attendance
        WHERE attendance_date BETWEEN #{startDate} AND #{endDate}
        ORDER BY attendance_date DESC, employee_name
    </select>

    <!-- 根据员工ID和日期范围查询考勤记录 -->
    <select id="selectByEmployeeIdAndDateRange" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_attendance
        WHERE employee_id = #{employeeId}
        AND attendance_date BETWEEN #{startDate} AND #{endDate}
        ORDER BY attendance_date DESC
    </select>

    <!-- 根据考勤状态查询考勤记录 -->
    <select id="selectByStatus" parameterType="integer" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_attendance
        WHERE status = #{status}
        ORDER BY attendance_date DESC, employee_name
    </select>

    <!-- 查询考勤统计信息 -->
    <select id="selectAttendanceStatistics" resultType="java.util.Map">
        SELECT 
            department_name,
            COUNT(*) as total_records,
            COUNT(CASE WHEN status = 1 THEN 1 END) as normal_count,
            COUNT(CASE WHEN status = 2 THEN 1 END) as late_count,
            COUNT(CASE WHEN status = 3 THEN 1 END) as early_count,
            COUNT(CASE WHEN status = 4 THEN 1 END) as absent_count,
            COUNT(CASE WHEN status = 5 THEN 1 END) as leave_count,
            ROUND(AVG(work_hours), 2) as avg_work_hours,
            ROUND(SUM(overtime_hours), 2) as total_overtime_hours,
            ROUND(AVG(late_minutes), 2) as avg_late_minutes
        FROM hrm_attendance
        WHERE attendance_date BETWEEN #{startDate} AND #{endDate}
        GROUP BY department_name
        ORDER BY department_name
    </select>

    <!-- 查询员工月度考勤统计 -->
    <select id="selectMonthlyAttendanceByEmployee" resultType="java.util.Map">
        SELECT 
            employee_id,
            employee_name,
            department_name,
            COUNT(*) as total_days,
            COUNT(CASE WHEN status = 1 THEN 1 END) as normal_days,
            COUNT(CASE WHEN status = 2 THEN 1 END) as late_days,
            COUNT(CASE WHEN status = 3 THEN 1 END) as early_days,
            COUNT(CASE WHEN status = 4 THEN 1 END) as absent_days,
            COUNT(CASE WHEN status = 5 THEN 1 END) as leave_days,
            ROUND(SUM(work_hours), 2) as total_work_hours,
            ROUND(SUM(overtime_hours), 2) as total_overtime_hours,
            ROUND(SUM(late_minutes), 2) as total_late_minutes,
            ROUND(AVG(work_hours), 2) as avg_work_hours
        FROM hrm_attendance
        WHERE employee_id = #{employeeId}
        AND YEAR(attendance_date) = #{year}
        AND MONTH(attendance_date) = #{month}
        GROUP BY employee_id, employee_name, department_name
    </select>

</mapper>