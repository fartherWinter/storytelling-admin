<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.hrm.HrmPositionMapper">

    <resultMap type="com.chennian.storytelling.bean.model.hrm.HrmPosition" id="BaseResultMap">
        <id property="id" column="id" />
        <result property="positionCode" column="position_code" />
        <result property="positionName" column="position_name" />
        <result property="level" column="level" />
        <result property="departmentId" column="department_id" />
        <result property="departmentName" column="department_name" />
        <result property="description" column="description" />
        <result property="requirements" column="requirements" />
        <result property="minSalary" column="min_salary" />
        <result property="maxSalary" column="max_salary" />
        <result property="orderNum" column="order_num" />
        <result property="status" column="status" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="createBy" column="create_by" />
        <result property="updateBy" column="update_by" />
        <result property="remark" column="remark" />
    </resultMap>

    <sql id="Base_Column_List">
        id, position_code, position_name, level, department_id, department_name,
        description, requirements, min_salary, max_salary, order_num, status,
        create_time, update_time, create_by, update_by, remark
    </sql>

    <!-- 根据部门ID查询职位列表 -->
    <select id="selectByDepartmentId" parameterType="long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_position
        WHERE department_id = #{departmentId}
        AND status = 1
        ORDER BY level, order_num, position_name
    </select>

    <!-- 根据职位编码查询职位信息 -->
    <select id="selectByPositionCode" parameterType="string" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_position
        WHERE position_code = #{positionCode}
        AND status = 1
    </select>

    <!-- 根据职位级别查询职位列表 -->
    <select id="selectByLevel" parameterType="integer" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_position
        WHERE level = #{level}
        AND status = 1
        ORDER BY department_name, order_num, position_name
    </select>

    <!-- 根据状态查询职位列表 -->
    <select id="selectByStatus" parameterType="integer" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM hrm_position
        WHERE status = #{status}
        ORDER BY department_name, level, order_num, position_name
    </select>

    <!-- 查询职位统计信息 -->
    <select id="selectPositionStatistics" resultType="java.util.Map">
        SELECT 
            department_name,
            COUNT(*) as total_positions,
            COUNT(CASE WHEN status = 1 THEN 1 END) as active_positions,
            COUNT(CASE WHEN status = 0 THEN 1 END) as inactive_positions,
            COUNT(CASE WHEN level = 1 THEN 1 END) as level_1_positions,
            COUNT(CASE WHEN level = 2 THEN 1 END) as level_2_positions,
            COUNT(CASE WHEN level = 3 THEN 1 END) as level_3_positions,
            COUNT(CASE WHEN level = 4 THEN 1 END) as level_4_positions,
            COUNT(CASE WHEN level = 5 THEN 1 END) as level_5_positions,
            ROUND(AVG(min_salary), 2) as avg_min_salary,
            ROUND(AVG(max_salary), 2) as avg_max_salary,
            MAX(max_salary) as highest_max_salary,
            MIN(min_salary) as lowest_min_salary,
            ROUND(AVG((min_salary + max_salary) / 2), 2) as avg_mid_salary
        FROM hrm_position
        WHERE status = 1
        GROUP BY department_name
        ORDER BY department_name
    </select>

</mapper>