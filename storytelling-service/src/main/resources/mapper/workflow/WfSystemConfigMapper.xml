<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.workflow.WfSystemConfigMapper">

    <!-- 工作流系统配置结果映射 -->
    <resultMap id="WfSystemConfigResult" type="com.chennian.storytelling.bean.model.workflow.WfSystemConfig">
        <id property="id" column="id"/>
        <result property="configKey" column="config_key"/>
        <result property="configValue" column="config_value"/>
        <result property="configName" column="config_name"/>
        <result property="configDescription" column="config_description"/>
        <result property="configGroup" column="config_group"/>
        <result property="configType" column="config_type"/>
        <result property="defaultValue" column="default_value"/>
        <result property="valueOptions" column="value_options"/>
        <result property="validationRule" column="validation_rule"/>
        <result property="isEditable" column="is_editable"/>
        <result property="isVisible" column="is_visible"/>
        <result property="sortOrder" column="sort_order"/>
        <result property="remarks" column="remarks"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="createdBy" column="created_by"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="updatedTime" column="updated_time"/>
        <result property="version" column="version"/>
    </resultMap>

    <!-- 配置统计结果映射 -->
    <resultMap id="ConfigStatisticsResult" type="com.chennian.storytelling.bean.dto.ConfigStatisticsDTO">
        <result property="configGroup" column="config_group"/>
        <result property="configType" column="config_type"/>
        <result property="count" column="count"/>
        <result property="editableCount" column="editable_count"/>
        <result property="visibleCount" column="visible_count"/>
    </resultMap>

    <!-- 配置变更历史结果映射 -->
    <resultMap id="ConfigChangeHistoryResult" type="com.chennian.storytelling.bean.dto.ConfigChangeHistoryDTO">
        <result property="configKey" column="config_key"/>
        <result property="configName" column="config_name"/>
        <result property="oldValue" column="old_value"/>
        <result property="newValue" column="new_value"/>
        <result property="changeTime" column="change_time"/>
        <result property="changeUser" column="change_user"/>
        <result property="changeUserName" column="change_user_name"/>
        <result property="changeReason" column="change_reason"/>
        <result property="operationType" column="operation_type"/>
    </resultMap>

    <!-- 基础列字段 -->
    <sql id="Base_Column_List">
        id, config_key, config_value, config_name, config_description, config_group, config_type,
        default_value, value_options, validation_rule, is_editable, is_visible, sort_order,
        remarks, tenant_id, created_by, created_time, updated_by, updated_time, version
    </sql>

    <!-- 根据配置键查询配置 -->
    <select id="selectByConfigKey" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE config_key = #{configKey}
        AND deleted = 0
    </select>

    <!-- 根据配置分组查询配置列表 -->
    <select id="selectByConfigGroup" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE config_group = #{configGroup}
        AND deleted = 0
        ORDER BY sort_order ASC, created_time DESC
    </select>

    <!-- 根据配置类型查询配置列表 -->
    <select id="selectByConfigType" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE config_type = #{configType}
        AND deleted = 0
        ORDER BY sort_order ASC, created_time DESC
    </select>

    <!-- 查询可编辑的配置列表 -->
    <select id="selectEditableConfigs" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE is_editable = 1
        AND is_visible = 1
        AND deleted = 0
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 根据配置键更新配置值 -->
    <update id="updateConfigValue">
        UPDATE wf_system_config
        SET config_value = #{configValue},
            updated_time = NOW(),
            updated_by = #{updatedBy},
            version = version + 1
        WHERE config_key = #{configKey}
        AND deleted = 0
    </update>

    <!-- 批量更新配置 -->
    <update id="batchUpdateConfigs">
        <foreach collection="configs" item="config" separator=";">
            UPDATE wf_system_config
            SET config_value = #{config.configValue},
                updated_time = NOW(),
                updated_by = #{config.updatedBy},
                version = version + 1
            WHERE config_key = #{config.configKey}
            AND deleted = 0
        </foreach>
    </update>

    <!-- 查询所有配置分组 -->
    <select id="selectAllConfigGroups" resultType="java.lang.String">
        SELECT DISTINCT config_group
        FROM wf_system_config
        WHERE config_group IS NOT NULL
        AND config_group != ''
        AND deleted = 0
        ORDER BY config_group
    </select>

    <!-- 查询配置统计信息 -->
    <select id="selectConfigStatistics" resultType="java.util.Map">
        SELECT 
            config_group,
            config_type,
            COUNT(*) as total_count,
            SUM(CASE WHEN is_editable = 1 THEN 1 ELSE 0 END) as editable_count,
            SUM(CASE WHEN is_visible = 1 THEN 1 ELSE 0 END) as visible_count
        FROM wf_system_config
        WHERE deleted = 0
        GROUP BY config_group, config_type
        ORDER BY config_group, config_type
    </select>

    <!-- 根据配置键列表批量查询配置 -->
    <select id="selectByConfigKeys" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE config_key IN
        <foreach collection="configKeys" item="configKey" open="(" separator="," close=")">
            #{configKey}
        </foreach>
        AND deleted = 0
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 查询系统配置详情 -->
    <select id="selectConfigDetail" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE id = #{configId}
        AND deleted = 0
    </select>

    <!-- 重置配置为默认值 -->
    <update id="resetConfigToDefault">
        UPDATE wf_system_config
        SET config_value = default_value,
            updated_time = NOW(),
            updated_by = #{updatedBy},
            version = version + 1
        WHERE config_key = #{configKey}
        AND deleted = 0
    </update>

    <!-- 批量重置配置为默认值 -->
    <update id="batchResetConfigsToDefault">
        UPDATE wf_system_config
        SET config_value = default_value,
            updated_time = NOW(),
            updated_by = #{updatedBy},
            version = version + 1
        WHERE config_key IN
        <foreach collection="configKeys" item="configKey" open="(" separator="," close=")">
            #{configKey}
        </foreach>
        AND deleted = 0
    </update>

    <!-- 导出系统配置 -->
    <select id="exportSystemConfigs" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE deleted = 0
        <if test="configGroup != null and configGroup != ''">
            AND config_group = #{configGroup}
        </if>
        <if test="configType != null and configType != ''">
            AND config_type = #{configType}
        </if>
        <if test="isEditable != null">
            AND is_editable = #{isEditable}
        </if>
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 查询配置变更历史 -->
    <select id="selectConfigChangeHistory" resultMap="ConfigChangeHistoryResult">
        SELECT 
            cch.config_key,
            sc.config_name,
            cch.old_value,
            cch.new_value,
            cch.change_time,
            cch.change_user,
            cch.change_user_name,
            cch.change_reason,
            cch.operation_type
        FROM wf_config_change_history cch
        LEFT JOIN wf_system_config sc ON cch.config_key = sc.config_key
        WHERE cch.deleted = 0
        <if test="configKey != null and configKey != ''">
            AND cch.config_key = #{configKey}
        </if>
        <if test="startTime != null">
            AND cch.change_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND cch.change_time <= #{endTime}
        </if>
        ORDER BY cch.change_time DESC
        LIMIT #{limit}
    </select>

    <!-- 根据租户ID查询配置列表 -->
    <select id="selectByTenantId" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE tenant_id = #{tenantId}
        AND deleted = 0
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 查询所有配置类型 -->
    <select id="selectAllConfigTypes" resultType="java.lang.String">
        SELECT DISTINCT config_type
        FROM wf_system_config
        WHERE config_type IS NOT NULL
        AND config_type != ''
        AND deleted = 0
        ORDER BY config_type
    </select>

    <!-- 根据配置名称模糊查询 -->
    <select id="selectByConfigNameLike" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE config_name LIKE CONCAT('%', #{configName}, '%')
        AND deleted = 0
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 查询可见的配置列表 -->
    <select id="selectVisibleConfigs" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE is_visible = 1
        AND deleted = 0
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 检查配置键是否存在 -->
    <select id="existsByConfigKey" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM wf_system_config
        WHERE config_key = #{configKey}
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
        AND deleted = 0
    </select>

    <!-- 根据验证规则查询配置列表 -->
    <select id="selectByValidationRule" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE validation_rule IS NOT NULL
        AND validation_rule != ''
        AND deleted = 0
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 查询有选项值的配置列表 -->
    <select id="selectConfigsWithOptions" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE value_options IS NOT NULL
        AND value_options != ''
        AND deleted = 0
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 根据默认值查询配置列表 -->
    <select id="selectByDefaultValue" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE default_value = #{defaultValue}
        AND deleted = 0
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 查询配置值与默认值不同的配置 -->
    <select id="selectModifiedConfigs" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE config_value != default_value
        AND deleted = 0
        ORDER BY updated_time DESC
    </select>

    <!-- 复合条件查询配置列表 -->
    <select id="selectByConditions" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE deleted = 0
        <if test="configKey != null and configKey != ''">
            AND config_key = #{configKey}
        </if>
        <if test="configGroup != null and configGroup != ''">
            AND config_group = #{configGroup}
        </if>
        <if test="configType != null and configType != ''">
            AND config_type = #{configType}
        </if>
        <if test="isEditable != null">
            AND is_editable = #{isEditable}
        </if>
        <if test="isVisible != null">
            AND is_visible = #{isVisible}
        </if>
        <if test="configName != null and configName != ''">
            AND config_name LIKE CONCAT('%', #{configName}, '%')
        </if>
        <if test="tenantId != null and tenantId != ''">
            AND tenant_id = #{tenantId}
        </if>
        ORDER BY config_group ASC, sort_order ASC
    </select>

    <!-- 根据分组统计配置数量 -->
    <select id="selectConfigCountByGroup" resultMap="ConfigStatisticsResult">
        SELECT 
            config_group,
            COUNT(*) as count,
            SUM(CASE WHEN is_editable = 1 THEN 1 ELSE 0 END) as editable_count,
            SUM(CASE WHEN is_visible = 1 THEN 1 ELSE 0 END) as visible_count
        FROM wf_system_config
        WHERE deleted = 0
        GROUP BY config_group
        ORDER BY count DESC
    </select>

    <!-- 根据类型统计配置数量 -->
    <select id="selectConfigCountByType" resultMap="ConfigStatisticsResult">
        SELECT 
            config_type,
            COUNT(*) as count,
            SUM(CASE WHEN is_editable = 1 THEN 1 ELSE 0 END) as editable_count,
            SUM(CASE WHEN is_visible = 1 THEN 1 ELSE 0 END) as visible_count
        FROM wf_system_config
        WHERE deleted = 0
        GROUP BY config_type
        ORDER BY count DESC
    </select>

    <!-- 查询最近更新的配置 -->
    <select id="selectRecentUpdatedConfigs" resultMap="WfSystemConfigResult">
        SELECT <include refid="Base_Column_List"/>
        FROM wf_system_config
        WHERE updated_time IS NOT NULL
        AND deleted = 0
        ORDER BY updated_time DESC
        LIMIT #{limit}
    </select>

</mapper>