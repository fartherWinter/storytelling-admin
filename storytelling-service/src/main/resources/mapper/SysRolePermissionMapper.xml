<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chennian.storytelling.dao.SysRolePermissionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chennian.storytelling.bean.model.SysRolePermission">
        <result column="role_id" property="roleId" />
        <result column="permission_id" property="permissionId" />
        <result column="create_time" property="createTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        role_id, permission_id, create_time
    </sql>

    <!-- 根据角色ID查询权限ID列表 -->
    <select id="selectPermissionIdsByRoleId" resultType="java.lang.Long">
        SELECT permission_id
        FROM sys_role_permission
        WHERE role_id = #{roleId}
    </select>

    <!-- 根据权限ID查询角色ID列表 -->
    <select id="selectRoleIdsByPermissionId" resultType="java.lang.Long">
        SELECT role_id
        FROM sys_role_permission
        WHERE permission_id = #{permissionId}
    </select>

    <!-- 新增角色权限关联 -->
    <insert id="insertRolePermission" parameterType="com.chennian.storytelling.bean.model.SysRolePermission">
        INSERT INTO sys_role_permission (role_id, permission_id, create_time)
        VALUES (#{roleId}, #{permissionId}, #{createTime})
    </insert>

    <!-- 批量新增角色权限关联 -->
    <insert id="batchInsertRolePermission">
        INSERT INTO sys_role_permission (role_id, permission_id, create_time)
        VALUES
        <foreach collection="rolePermissions" item="rp" separator=",">
            (#{rp.roleId}, #{rp.permissionId}, #{rp.createTime})
        </foreach>
    </insert>

    <!-- 删除角色权限关联 -->
    <delete id="deleteRolePermission">
        DELETE FROM sys_role_permission
        WHERE role_id = #{roleId} AND permission_id = #{permissionId}
    </delete>

    <!-- 根据角色ID删除角色权限关联 -->
    <delete id="deleteRolePermissionByRoleId">
        DELETE FROM sys_role_permission WHERE role_id = #{roleId}
    </delete>

    <!-- 根据权限ID删除角色权限关联 -->
    <delete id="deleteRolePermissionByPermissionId">
        DELETE FROM sys_role_permission WHERE permission_id = #{permissionId}
    </delete>

    <!-- 批量删除角色权限关联（根据角色ID） -->
    <delete id="deleteRolePermissionByRoleIds">
        DELETE FROM sys_role_permission WHERE role_id IN
        <foreach item="roleId" collection="roleIds" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <!-- 批量删除角色权限关联（根据权限ID） -->
    <delete id="deleteRolePermissionByPermissionIds">
        DELETE FROM sys_role_permission WHERE permission_id IN
        <foreach item="permissionId" collection="permissionIds" open="(" separator="," close=")">
            #{permissionId}
        </foreach>
    </delete>

    <!-- 查询角色权限关联是否存在 -->
    <select id="checkRolePermissionExists" resultType="int">
        SELECT COUNT(1)
        FROM sys_role_permission
        WHERE role_id = #{roleId} AND permission_id = #{permissionId}
    </select>

    <!-- 统计角色权限关联数量（根据角色ID） -->
    <select id="countRolePermissionByRoleId" resultType="int">
        SELECT COUNT(1)
        FROM sys_role_permission
        WHERE role_id = #{roleId}
    </select>

    <!-- 统计角色权限关联数量（根据权限ID） -->
    <select id="countRolePermissionByPermissionId" resultType="int">
        SELECT COUNT(1)
        FROM sys_role_permission
        WHERE permission_id = #{permissionId}
    </select>

    <!-- 查询所有角色权限关联 -->
    <select id="selectAllRolePermissions" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_role_permission
        ORDER BY role_id, permission_id
    </select>

    <!-- 根据角色ID列表查询权限ID列表 -->
    <select id="selectPermissionIdsByRoleIds" resultType="java.lang.Long">
        SELECT DISTINCT permission_id
        FROM sys_role_permission
        WHERE role_id IN
        <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </select>

    <!-- 根据权限ID列表查询角色ID列表 -->
    <select id="selectRoleIdsByPermissionIds" resultType="java.lang.Long">
        SELECT DISTINCT role_id
        FROM sys_role_permission
        WHERE permission_id IN
        <foreach collection="permissionIds" item="permissionId" open="(" separator="," close=")">
            #{permissionId}
        </foreach>
    </select>

    <!-- 查询角色权限关联详情 -->
    <select id="selectRolePermission" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_role_permission
        WHERE role_id = #{roleId} AND permission_id = #{permissionId}
    </select>

    <!-- 根据角色ID查询角色权限关联列表 -->
    <select id="selectRolePermissionsByRoleId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_role_permission
        WHERE role_id = #{roleId}
        ORDER BY permission_id
    </select>

    <!-- 根据权限ID查询角色权限关联列表 -->
    <select id="selectRolePermissionsByPermissionId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_role_permission
        WHERE permission_id = #{permissionId}
        ORDER BY role_id
    </select>

    <!-- 批量更新角色权限关联 -->
    <delete id="batchDeleteRolePermissions">
        DELETE FROM sys_role_permission WHERE role_id = #{roleId}
    </delete>
    
    <insert id="batchUpdateRolePermissions">
        <if test="permissionIds != null and permissionIds.size() > 0">
            INSERT INTO sys_role_permission (role_id, permission_id, create_time)
            VALUES
            <foreach collection="permissionIds" item="permissionId" separator=",">
                (#{roleId}, #{permissionId}, NOW())
            </foreach>
        </if>
    </insert>

    <!-- 查询角色权限统计信息 -->
    <select id="selectRolePermissionStatistics" resultType="java.util.Map">
        SELECT 
            r.role_name AS roleName,
            COUNT(rp.permission_id) AS permissionCount
        FROM sys_role r
        LEFT JOIN sys_role_permission rp ON r.role_id = rp.role_id
        WHERE r.status = '0'
        GROUP BY r.role_id, r.role_name
        ORDER BY permissionCount DESC
    </select>

    <!-- 根据角色类型查询权限ID列表 -->
    <select id="selectPermissionIdsByRoleType" resultType="java.lang.Long">
        SELECT DISTINCT rp.permission_id
        FROM sys_role_permission rp
        INNER JOIN sys_role r ON rp.role_id = r.role_id
        WHERE r.role_type = #{roleType}
        AND r.status = '0'
    </select>

    <!-- 根据权限类型查询角色ID列表 -->
    <select id="selectRoleIdsByPermissionType" resultType="java.lang.Long">
        SELECT DISTINCT rp.role_id
        FROM sys_role_permission rp
        INNER JOIN sys_permission p ON rp.permission_id = p.permission_id
        WHERE p.permission_type = #{permissionType}
        AND p.status = '0'
    </select>

    <!-- 查询工作流角色权限关联 -->
    <select id="selectWorkflowRolePermissions" resultMap="BaseResultMap">
        SELECT rp.<include refid="Base_Column_List" />
        FROM sys_role_permission rp
        INNER JOIN sys_permission p ON rp.permission_id = p.permission_id
        WHERE p.permission_type = 'WORKFLOW'
        AND p.status = '0'
        ORDER BY rp.role_id, rp.permission_id
    </select>

    <!-- 查询系统角色权限关联 -->
    <select id="selectSystemRolePermissions" resultMap="BaseResultMap">
        SELECT rp.<include refid="Base_Column_List" />
        FROM sys_role_permission rp
        INNER JOIN sys_permission p ON rp.permission_id = p.permission_id
        WHERE p.permission_type IN ('MENU', 'BUTTON', 'API')
        AND p.status = '0'
        ORDER BY rp.role_id, rp.permission_id
    </select>

    <!-- 复制角色权限 -->
    <insert id="copyRolePermissions">
        INSERT INTO sys_role_permission (role_id, permission_id, create_time)
        SELECT #{targetRoleId}, permission_id, NOW()
        FROM sys_role_permission
        WHERE role_id = #{sourceRoleId}
    </insert>

    <!-- 同步角色权限（删除无效关联） -->
    <delete id="syncRolePermissions">
        DELETE rp FROM sys_role_permission rp
        LEFT JOIN sys_role r ON rp.role_id = r.role_id
        LEFT JOIN sys_permission p ON rp.permission_id = p.permission_id
        WHERE r.role_id IS NULL OR p.permission_id IS NULL
    </delete>

    <!-- 查询孤立的角色权限关联（角色或权限已被删除） -->
    <select id="selectOrphanRolePermissions" resultMap="BaseResultMap">
        SELECT rp.<include refid="Base_Column_List" />
        FROM sys_role_permission rp
        LEFT JOIN sys_role r ON rp.role_id = r.role_id
        LEFT JOIN sys_permission p ON rp.permission_id = p.permission_id
        WHERE r.role_id IS NULL OR p.permission_id IS NULL
    </select>

    <!-- 清理孤立的角色权限关联 -->
    <delete id="cleanOrphanRolePermissions">
        DELETE rp FROM sys_role_permission rp
        LEFT JOIN sys_role r ON rp.role_id = r.role_id
        LEFT JOIN sys_permission p ON rp.permission_id = p.permission_id
        WHERE r.role_id IS NULL OR p.permission_id IS NULL
    </delete>

</mapper>